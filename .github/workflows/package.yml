name: Build, package, release

on:
  push:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
    - name: Set up Node.js 14
      uses: actions/setup-node@v1
      with:
        node-version: '15.x'
    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'adopt'
        
    - name: Build
      run: cd scripts && ./build_release.sh && cd ..

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: "v-${ GITHUB_SHA::8 }"
        release_name: Release ${{ github.sha }}
        draft: false
        prerelease: false

    - name: Upload linux-amd64
      id: upload-linux-amd64
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: "./release/linux-amd64.tar.gz"
        asset_name: "linux-amd64.tar.gz"
        asset_content_type: "application/gzip"
    - name: Upload linux-arm64
      id: upload-linux-arm64
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: "./release/linux-arm64.tar.gz"
        asset_name: "linux-arm64.tar.gz"
        asset_content_type: "application/gzip"
    - name: Upload mac-amd64
      id: upload-mac-amd64
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: "./release/mac-amd64.tar.gz"
        asset_name: "mac-amd64.tar.gz"
        asset_content_type: "application/gzip"
    - name: Upload windows-amd64
      id: upload-windows-amd64
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: "./release/windows-amd64.tar.gz"
        asset_name: "windows-amd64.tar.gz"
        asset_content_type: "application/gzip"
